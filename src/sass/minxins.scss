// px 转换成 rem
@function px2rem($px) {
    @return $px*640/640/100+rem;
}

@mixin align-justify($dir: row, $ai: center, $js: center) {
    display: flex;
    flex-direction: $dir;
    align-items: $ai;
    justify-content: $js;
}

// 清除浮动
@mixin clearfix() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// 圆角
@mixin border-top-radius($radius) {
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
    border-bottom-right-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
}

// 1px border
@mixin border-top($color) {
    content: " ";
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    height: 1px;
    border-top: 1px solid $color; // transform-origin: 0 0;
    // transform: scaleY(0.5);
}

@mixin border-bottom($color) {
    content: " ";
    position: absolute;
    left: 0;
    bottom: 0;
    right: 0;
    height: 1px;
    border-bottom: 1px solid $color; // transform-origin: 0 100%;
    // transform: scaleY(0.5);
}

@mixin border-left($color) {
    content: " ";
    position: absolute;
    left: 0;
    top: 0;
    width: 1px;
    bottom: 0;
    border-left: 1px solid $color;
    transform-origin: 0 0;
    transform: scaleX(0.5);
}

@mixin border-right($color) {
    content: " ";
    position: absolute;
    right: 0;
    top: 0;
    width: 1px;
    bottom: 0;
    border-right: 1px solid $color;
    transform-origin: 100% 0;
    transform: scaleX(0.5);
}

// arrow
@mixin arrow($direction, $size, $border-width, $border-color) {
    display: inline-block;
    width: $size;
    height: $size;
    border-width: $border-width $border-width 0 0;
    border-color: $border-color;
    border-style: solid;
    @if $direction==top {
        transform: rotate(-45deg);
    }
    @if $direction==right {
        transform: rotate(45deg);
        position: relative;
        top: -2px;
    }
    @if $direction==down {
        transform: rotate(135deg);
        position: relative;
        top: -3px;
    }
    @if $direction==left {
        transform: rotate(-135deg);
        position: relative;
        top: -2px;
    }
}

// text wrap
@mixin text-wrap() {
    word-wrap: break-word;
    word-break: break-all;
}

@mixin padding-top-bottom($padding-width) {
    padding-top: $padding-width;
    padding-bottom: $padding-width;
}

@mixin padding-left-right($padding-width) {
    padding-left: $padding-width;
    padding-right: $padding-width;
}

@mixin retina-border($color, $direction) {
    content: " ";
    position: absolute;
    background-color: $color; // border-#{$direction}: 1PX solid $color;
    @if $direction==top or $direction==bottom {
        height: 1PX;
        left: 0;
        right: 0;
        transform: scaleY(0.5);
        @if $direction==top {
            top: 0;
            transform-origin: 0 0;
        }
        @else {
            transform-origin: 0 100%;
            bottom: 1PX;
        }
    }
    @else {
        width: 1PX;
        top: 0;
        bottom: 0;
        transform: scaleX(0.5);
        @if $direction==left {
            left: 0;
            transform-origin: 0 0;
        }
        @else {
            right: 0;
            transform-origin: 100% 0;
        }
    }
}

@mixin ellipsis() {
    width: auto;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}